import re
# text = "<p>Картинка <img src='bg.jpg'> в тексте</p>"
# match = re.findall(r"<img\s+[^>]*src=(?P<q>[\"'])(.+?)(?P=q)", text)
# print(match)

s = """Регулярные выражения представляют собой похожий, но гораздо более сильный инструмент
для поиска строк, проверки их на соответствие какому-либо шаблону и другой подобной
работы. Англоязычное название этого инструмента — Regular Expressions или просто RegExp.
Строго говоря, регулярные выражения — специальный язык для описания шаблонов строк.

АААА аааа АаАаАаАа 123 123 12345 11223344
А1Б2В3 АА11 ББ22ВВ 33ГГ44

Тест!    Ещё!   Даёшь!   ЁЁЁёёё

QwertyЙцукен

+-,/[](), *** (***), a*(b+[c+d])*e/f+g-h

!!\"\"\"####$$$$$%%%%%&&&'''(((())***++++,,,,,-----..//:::;;;;<<<<<===>>>????
@@@@@[[[[\\\\\\]]]]]^^^__`````{{{{|||||}}}}}~~~~~

<a href="#10">10: CamelCase -> under_score</a>;
<a href="#11">11: Удаление повторов</a>;
<a href="#12">12: Близкие слова</a>;
<a href="#13">13: Форматирование больших чисел</a>;
<a href="#14">14: Разделить текст на предложения</a>;
<a href="#15">15: Форматирование номера телефона</a>;
<a href="#16">16: Поиск e-mail'ов — 2</a>;"""

# Найдите все натуральные числа (возможно, окружённые буквами);
# print(*re.findall(r"\d+", s, re.S))
# print()
# Найдите все «слова», написанные капсом (то есть строго заглавными), возможно внутри настоящих слов (аааБББввв);
# print(*re.findall(r"[A-ZА-Я]+", s, re.S))
# print()
# Найдите слова, в которых есть русская буква, а за ней цифра;
# print(*re.findall(r"[А-Я]\d", s, re.S))
# print()
# Найдите все слова, начинающиеся с русской или латинской большой буквы (\b — граница слова);
print(*re.findall(r"\b[А-ЯA-Z].+?\s", s, re.S))
print()
# Найдите слова, которые начинаются на гласную (\b — граница слова);
print(*re.findall(r"\b[УЕЫАОЭЯИЮуеыаоэяию]\w+?\s", s, re.S))
print()
# Найдите все натуральные числа, не находящиеся на границе слова;
print(*re.findall(r"\B\d\B", s, re.S))
print()
# Найдите строчки, в которых есть символ * (. — это точно не конец строки!);
print(*re.findall(r"[*]+", s, re.S))
print()
# Найдите строчки, в которых есть открывающая и когда-нибудь потом закрывающая скобки;
print(*re.findall(r"[(].*[)]", s, re.S))
print()
# Выделите одним махом весь кусок оглавления (в конце примера, вместе с тегами);


# Выделите одним махом только текстовую часть оглавления, без тегов;
print(*re.findall(r"\w+", s, re.S))
print()
# Найдите пустые строчки;
# print(*re.findall(r"\n\n", s, re.S))
print()
# Найти все теги, не включая их содержимое.
print(*re.findall(r"<a\s*.*/a", s, re.S))
print()
